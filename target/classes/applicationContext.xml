<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!--开启注解的扫描，希望处理service和dao，controller不需要Spring框架去处理-->
    <context:component-scan base-package="cn.wt">
        <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 开启注解AOP-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!--引入外部文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"
                                  ignore-unresolvable="true"></context:property-placeholder>

    <!--    数据源-->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcurl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
    </bean>

    <!--    配置JdbcTemplate-->
    <!--    <bean class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--        <property name="dataSource" ref="pooledDataSource"></property>-->
    <!--    </bean>-->

    <!--配置使用mybatis操作数据库-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--指定mpper位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
    </bean>

    <!--将每一个dao接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.wt.dao"></property>
    </bean>

    <!-- 引入redis配置文件 -->
    <import resource="classpath:redis/redis-context.xml"/>

    <!-- 引入activemq配置文件 -->
    <import resource="classpath:activemq/activemq-config.xml"/>

    <!-- 配置消费listener -->
    <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory"></property>
        <property name="destinationName" value="destinationQueue"/>
        <property name="messageListener" ref="simpleMsgListener"></property>
        <!--        <property name="concurrentConsumers" value="1"/>-->
    </bean>

    <!--配置事务管理器,控制数据源里面的关闭和连接-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

    <!--配置事务增强、事务属性、事务建议-->
    <tx:advice id="myTx" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="Exception"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--基于xml配置事务 哪些方法切入事务还要写切入点表达式-->
    <aop:config>
        <aop:pointcut id="txpoint" expression="execution(* cn.wt.service.*.*(..))"/>
        <aop:advisor advice-ref="myTx" pointcut-ref="txpoint"></aop:advisor>
    </aop:config>

    <tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
</beans>